{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/RegisteredPage/RegisteredPage.js","pages/NewPostPage/NewPostPage.js","components/Header/Header.js","pages/EditPage/EditPage.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPost","id","fetch","then","res","json","login","username","password","method","headers","body","JSON","stringify","getMe","authorization","AuthContext","createContext","ErrorMessage","styled","div","LoginPage","setUser","useContext","useState","setUsername","setPassword","error","setError","history","useHistory","onSubmit","e","preventDefault","data","ok","message","toString","push","value","onChange","target","type","Root","PostsContainer","PostsTitle","Link","PostsDate","PostsEdit","PageBlock","PagePrev","button","PageNext","PageStatus","Posts","post","user","er","userId","to","title","Date","createdAt","toLocaleString","PageTion","allPage","page","setPage","handleButtonClick","onClick","HomePage","isGetingPostPage","setIsGetingPostPage","posts","setPosts","setAllPage","useEffect","Math","ceil","length","limit","getPostsPage","map","PostBlock","PostBlockTitle","PostBlockDate","PostBlockBody","PostPage","setPost","useParams","ErrorRegisterMessage","RegisteredPage","registerNickname","setRegisterNickname","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerError","setRegisterError","nickname","NewPostBlock","NewPostTitle","input","NewPostBody","textarea","SubmitButton","NewPostPage","setTitle","content","setContent","newPostError","setNewPostError","sendPost","HeaderContainer","Brand","NavbarList","LeftContainer","Nav","props","$active","NavbarGetingBlock","NavbarGeting","pathname","Header","location","useLocation","isGetingUser","setIsGetingUser","EditBlock","EditBlockTitle","EditBlockContent","EditButton","EditPage","editTitle","setEditTitle","editContent","setEditContent","editError","setEditError","editPost","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1cbfcef.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  return localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPostsPage = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const sendPost = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const editPost = (title, body, id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title: title,\r\n      body: body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login, getMe } from \"../../WebAPI\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext } from \"../../contexts\";\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    if (username === \"\" && password === \"\") {\r\n      e.preventDefault();\r\n      setError(\"帳號或密碼未輸入\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    setError(null);\r\n    login(username, password).then((data) => {\r\n      if (data.ok === 0) {\r\n        return setError(data.message);\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((res) => {\r\n        if (res.ok !== 1) {\r\n          setAuthToken(null);\r\n          return setError(res.toString());\r\n        }\r\n        setUser(res.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        username:\r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        password:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button>登入</button>\r\n      <ErrorMessage>{error && error}</ErrorMessage>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts, getPostsPage } from \"../../WebAPI\";\nimport { AuthContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostsContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostsTitle = styled(Link)`\n  font-size: 24px;\n  width: 80%;\n  color: #333;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst PostsDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostsEdit = styled(Link)`\n  color: #ccc;\n  text-decoration: none;\n`;\n\nconst PageBlock = styled.div``;\nconst PagePrev = styled.button``;\nconst PageNext = styled.button``;\nconst PageStatus = styled.div``;\n\nfunction Posts({ post, user }) {\n  let er = null;\n  if (user) {\n    if (post.userId === user.id) {\n      er = true;\n    }\n  }\n  return (\n    <PostsContainer>\n      <PostsTitle to={`/posts/${post.id}`}>{post.title}</PostsTitle>\n      {er && <PostsEdit to={`/edit/${post.id}`}>編輯</PostsEdit>}\n      <PostsDate>{new Date(post.createdAt).toLocaleString()}</PostsDate>\n    </PostsContainer>\n  );\n}\n\nfunction PageTion({ allPage, page, setPage }) {\n  const handleButtonClick = (e) => {\n    if (e === \"next\" && page < allPage) {\n      return setPage(page + 1);\n    }\n    if (e === \"prev\" && page >= 2) {\n      return setPage(page - 1);\n    }\n    return;\n  };\n  return (\n    <PageBlock>\n      <PagePrev onClick={() => handleButtonClick(\"prev\")}>上一頁</PagePrev>\n      <PageNext onClick={() => handleButtonClick(\"next\")}>下一頁</PageNext>\n      <PageStatus>\n        第{page}頁/共{allPage}頁\n      </PageStatus>\n    </PageBlock>\n  );\n}\n\nPosts.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [isGetingPostPage, setIsGetingPostPage] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [allPage, setAllPage] = useState();\n  const [page, setPage] = useState(1);\n  const limit = 5;\n  const { user } = useContext(AuthContext);\n  useEffect(() => {\n    getPosts().then((posts) => {\n      setAllPage(Math.ceil(posts.length / limit));\n    });\n  }, []);\n  useEffect(() => {\n    getPostsPage(page, limit).then((res) => {\n      setPosts(res);\n      setIsGetingPostPage(true);\n    });\n  }, [page]);\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Posts key={post.id} post={post} user={user} />\n      ))}\n      {isGetingPostPage && (\n        <PageTion allPage={allPage} page={page} setPage={setPage} />\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from \"../../WebAPI\";\n\nconst PostBlock = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  display: block;\n  box-shadow: 0px 5px 8px black;\n  border-top: solid 2px black;\n  padding: 20px;\n`;\n\nconst PostBlockTitle = styled.div`\n  font-size: 60px;\n  word-break: break-all;\n`;\n\nconst PostBlockDate = styled.div`\n  color: #ccc;\n  margin-left: 10px;\n  margin-top: 10px;\n`;\n\nconst PostBlockBody = styled.div`\n  font-size: 24px;\n  margin-left: 10px;\n  margin-top: 20px;\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nexport default function PostPage() {\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id).then((post) => setPost(post[0]));\n  }, [id]);\n  return (\n    <PostBlock>\n      <PostBlockTitle>{post && post.title}</PostBlockTitle>\n      <PostBlockDate>\n        {post && new Date(post.createdAt).toLocaleString()}\n      </PostBlockDate>\n      <PostBlockBody>{post && post.body}</PostBlockBody>\n    </PostBlock>\n  );\n}\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login, getMe, register } from \"../../WebAPI\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext } from \"../../contexts\";\r\nconst ErrorRegisterMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nexport default function RegisteredPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [registerNickname, setRegisterNickname] = useState(\"\");\r\n  const [registerUsername, setRegisterUsername] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n\r\n  const [registerError, setRegisterError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleRegisterSubmit = (e) => {\r\n    if (\r\n      registerNickname === \"\" &&\r\n      registerUsername === \"\" &&\r\n      registerPassword === \"\"\r\n    ) {\r\n      e.preventDefault();\r\n      setRegisterError(\"暱稱或帳號或密碼 未輸入\");\r\n      return;\r\n    }\r\n    setRegisterError(null);\r\n    register(registerNickname, registerUsername, registerPassword).then(\r\n      (data) => {\r\n        if (data.ok === 0) {\r\n          return setRegisterError(data.message);\r\n        }\r\n        // 因為後台會將註冊密碼改成 \"Lidemy\"\r\n        login(registerUsername, \"Lidemy\").then((data) => {\r\n          if (data.ok === 0) {\r\n            return setRegisterError(data.message);\r\n          }\r\n          setAuthToken(data.token);\r\n          getMe().then((res) => {\r\n            if (res.ok !== 1) {\r\n              setAuthToken(null);\r\n              return setRegisterError(res.toString());\r\n            }\r\n            setUser(res.data);\r\n            history.push(\"/\");\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <form onSubmit={handleRegisterSubmit}>\r\n      <div>\r\n        nickname:\r\n        <input\r\n          value={registerNickname}\r\n          onChange={(e) => setRegisterNickname(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        username:\r\n        <input\r\n          value={registerUsername}\r\n          onChange={(e) => setRegisterUsername(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password:\r\n        <input\r\n          type=\"password\"\r\n          value={registerPassword}\r\n          onChange={(e) => setRegisterPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button>註冊</button>\r\n      <ErrorRegisterMessage>\r\n        {registerError && registerError}\r\n      </ErrorRegisterMessage>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { sendPost } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NewPostBlock = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 5px 8px black;\r\n  border-top: solid 2px black;\r\n  padding: 20px;\r\n`;\r\nconst NewPostTitle = styled.input`\r\n  width: 600px;\r\n  font-size: 20px;\r\n  padding: 6px;\r\n  margin-top: 40px;\r\n  box-sizing: border-box;\r\n`;\r\nconst NewPostBody = styled.textarea`\r\n  display: block;\r\n  width: 600px;\r\n  height: 500px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  margin-top: 20px;\r\n`;\r\nconst SubmitButton = styled.button`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  float: right;\r\n  margin-top: 30px;\r\n`;\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [newPostError, setNewPostError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleNewPostSubmit = () => {\r\n    sendPost(title, content).then((res) => {\r\n      if (res.ok === 0) {\r\n        return setNewPostError(res.message);\r\n      }\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n  return (\r\n    <NewPostBlock>\r\n      <form onSubmit={handleNewPostSubmit}>\r\n        <NewPostTitle\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <NewPostBody\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        {newPostError && newPostError}\r\n        <SubmitButton>送出文章</SubmitButton>\r\n      </form>\r\n    </NewPostBlock>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${(props) => props.$active && `background: rgba(0, 0, 0, 0.2);`}\n`;\n\nconst NavbarGetingBlock = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nfunction NavbarGeting({ user, pathname }) {\n  return (\n    <NavbarGetingBlock>\n      {!user && (\n        <Nav to=\"/login\" $active={pathname === \"/login\"}>\n          登入\n        </Nav>\n      )}\n      {!user && (\n        <Nav to=\"/registered\" $active={pathname === \"/registered\"}>\n          註冊\n        </Nav>\n      )}\n    </NavbarGetingBlock>\n  );\n}\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser, isGetingUser, setIsGetingUser } = useContext(\n    AuthContext\n  );\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setIsGetingUser(true);\n\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  const pathname = location.pathname;\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>SPA 留言板</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/newpost\" $active={pathname === \"/newpost\"}>\n              發佈文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {user && (\n          <Nav to=\"/\" onClick={handleLogout}>\n            登出\n          </Nav>\n        )}\n        {isGetingUser && <NavbarGeting user={user} pathname={pathname} />}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPost, editPost } from \"../../WebAPI\";\r\n\r\nconst EditBlock = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 5px 8px black;\r\n  border-top: solid 2px black;\r\n  padding: 20px;\r\n`;\r\n\r\nconst EditBlockTitle = styled.input`\r\n  width: 600px;\r\n  font-size: 20px;\r\n  padding: 6px;\r\n  margin-top: 40px;\r\n  box-sizing: border-box;\r\n`;\r\nconst EditBlockContent = styled.textarea`\r\n  display: block;\r\n  width: 600px;\r\n  height: 500px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  float: right;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport default function EditPage() {\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editContent, setEditContent] = useState(\"\");\r\n  const [editError, setEditError] = useState(\"\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleEditSubmit = () => {\r\n    editPost(editTitle, editContent, id).then((res) => {\r\n      if (res.ok === 0) {\r\n        return setEditError(res.message);\r\n      }\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPost(id).then((post) => {\r\n      setEditTitle(post[0].title);\r\n      setEditContent(post[0].body);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <EditBlock>\r\n      <form onSubmit={handleEditSubmit}>\r\n        <EditBlockTitle\r\n          value={editTitle}\r\n          onChange={(e) => setEditTitle(e.target.value)}\r\n        />\r\n        <EditBlockContent\r\n          value={editContent}\r\n          onChange={(e) => setEditContent(e.target.value)}\r\n        />\r\n        {editError && editError}\r\n        <EditButton>編輯文章</EditButton>\r\n      </form>\r\n    </EditBlock>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport PostPage from \"../../pages/PostPage\";\nimport RegisteredPage from \"../../pages/RegisteredPage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport Header from \"../Header\";\nimport EditPage from \"../../pages/EditPage\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div``;\n\nexport default function App() {\n  const [isGetingUser, setIsGetingUser] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (getAuthToken()) {\n      return getMe().then((res) => {\n        if (res.ok) {\n          setUser(res.data);\n        }\n      });\n    }\n    setIsGetingUser(true);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, setUser, isGetingUser, setIsGetingUser }}\n    >\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/newpost\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/edit/:id\">\n              <EditPage />\n            </Route>\n            <Route path=\"/registered\">\n              <RegisteredPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}